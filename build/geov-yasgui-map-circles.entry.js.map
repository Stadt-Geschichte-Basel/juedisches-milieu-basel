{"file":"geov-yasgui-map-circles.entry.esm.js","mappings":"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","names":[],"sources":["node_modules/@geovistory/design-system-web/dist/collection/components/geov-yasgui-map-circles/geov-yasgui-map-circles.css?tag=geov-yasgui-map-circles","node_modules/@geovistory/design-system-web/dist/collection/components/geov-yasgui-map-circles/geov-yasgui-map-circles.js"],"sourcesContent":[":host,\ngeov-yasgui-map-circles {\n  container-type: size;\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n\n.geov-map-circles-container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.geov-map-circles-container .maplibregl-popup-content {\n  overflow-y: auto;\n  max-height: 210px;\n  padding: 0;\n}\n\n\ngeov-yasgui-map-circles ion-list {\n  overflow-y: auto;\n}\n\n.legend {\n  position: absolute;\n  z-index: 1;\n  max-width: 300px;\n  margin: 0;\n  top: 10px;\n  left: 10px;\n  max-height: calc(100% - 20px);\n  display: flex;\n  flex-direction: column;\n}\n\n\n.legend .collapse-button {\n  position: absolute;\n  margin: 0;\n  top: 4px;\n  left: 0;\n  z-index: 9999;\n}\n\n.legend.collapsed {\n  width: 46px;\n  height: 36px;\n\n}\n\n\n@container (width >=700px) {\n  .legend {\n    max-width: 300px;\n  }\n}\n\n#display-query {\n  position: absolute;\n  z-index: 1;\n  right: 0;\n}\n\n.yasgui .hidden {\n  display: none !important;\n}\n","import { Host, h } from \"@stencil/core\";\nimport { closeOutline, informationCircleOutline } from \"ionicons/icons\";\nimport { importMapLibre } from \"../../lib/importMapLibre\";\nimport { isNode } from \"../../lib/isNode\";\nfunction createGeoJSON(data, labelIndices) {\n  return {\n    type: 'FeatureCollection',\n    features: data.map(ele => {\n      var _a, _b, _c, _d, _e, _f, _g;\n      return {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [parseFloat(ele['long'].value), parseFloat(ele['lat'].value)],\n        },\n        //set the properties to the .value of the ele\n        properties: {\n          label: (_a = ele['label']) === null || _a === void 0 ? void 0 : _a.value,\n          radius: Math.round((parseFloat((_b = ele['radius']) === null || _b === void 0 ? void 0 : _b.value) || 0) * 10) / 10,\n          number: parseInt((_c = ele['number']) === null || _c === void 0 ? void 0 : _c.value),\n          type: ((_d = ele['type']) === null || _d === void 0 ? void 0 : _d.value) || 'none',\n          typeindex: labelIndices.indexOf(((_e = ele['type']) === null || _e === void 0 ? void 0 : _e.value) || 'none'),\n          link: (_f = ele['link']) === null || _f === void 0 ? void 0 : _f.value,\n          children: (_g = ele['children']) === null || _g === void 0 ? void 0 : _g.value,\n        },\n      };\n    }),\n  };\n}\n/**\n * This component is used by Yasgui as a plugin. It consumes the data from Yasgui.\n *\n * The result is displayed as circles of different sizes on a map.\n */\nexport class GeovYasguiMapCircles {\n  constructor() {\n    this.data = [\n      {\n        radius: { value: '80.2345', type: 'literal' },\n        number: { value: '0', type: 'literal' },\n        type: { value: 'default', type: 'literal' },\n        long: { value: '8.2318', type: 'literal' },\n        lat: { value: '46.7985', type: 'literal' },\n        label: { value: 'default', type: 'literal' },\n        link: { value: 'default', type: 'literal' },\n      },\n    ];\n    this.radiusMin = 8;\n    this.radiusMax = 20;\n    this.maxZoom = 10;\n    this.colorScale = ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c'];\n    this.ledgendExpanded = true;\n    this.disableScrollZoom = false;\n    this.displayMapNavigationControls = false;\n    this.labelIndices = [...new Set(this.data.map(ele => { var _a; return ((_a = ele['type']) === null || _a === void 0 ? void 0 : _a.value) || 'none'; }))];\n  }\n  async componentDidLoad() {\n    // If we are in a browser\n    if (!isNode()) {\n      /*\n       * Validation: Long and Lat must be numbers and < 540 and > -540, they can also not be omitted\n       * Radius must be a number and not 0, it can be omitted\n       * Number must be a number, it can be omitted\n       */\n      const invalidPoints = this.data.filter(d => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        //@ts-ignore - we want the coercion of isNan\n        if (Object.hasOwn(d, 'radius') && (isNaN((_a = d['radius']) === null || _a === void 0 ? void 0 : _a.value) || Number((_b = d['radius']) === null || _b === void 0 ? void 0 : _b.value) === 0))\n          return true;\n        //@ts-ignore - we want the coercion of isNan\n        if (Object.hasOwn(d, 'number') && isNaN((_c = d['number']) === null || _c === void 0 ? void 0 : _c.value))\n          return true;\n        return (Number((_d = d['long']) === null || _d === void 0 ? void 0 : _d.value) < -180 ||\n          Number((_e = d['long']) === null || _e === void 0 ? void 0 : _e.value) > 180 ||\n          Number((_f = d['lat']) === null || _f === void 0 ? void 0 : _f.value) < -90 ||\n          Number((_g = d['lat']) === null || _g === void 0 ? void 0 : _g.value) > 90 ||\n          //@ts-ignore - we want the coercion of isNan\n          isNaN((_h = d['long']) === null || _h === void 0 ? void 0 : _h.value) ||\n          //@ts-ignore - we want the coercion of isNan\n          isNaN((_j = d['lat']) === null || _j === void 0 ? void 0 : _j.value));\n      });\n      if (!(invalidPoints === null || invalidPoints === void 0 ? void 0 : invalidPoints.length)) {\n        // Load MapLibre script\n        const MapLibre = await importMapLibre();\n        const map = new MapLibre.Map({\n          container: this.mapContainerEl,\n          style: {\n            version: 8,\n            sources: {\n              osm: {\n                type: 'raster',\n                tiles: [\n                  'https://a.basemaps.cartocdn.com/rastertiles/light_nolabels/{z}/{x}/{y}{ratio}.png',\n                  'https://b.basemaps.cartocdn.com/rastertiles/light_nolabels/{z}/{x}/{y}{ratio}.png',\n                  'https://c.basemaps.cartocdn.com/rastertiles/light_nolabels/{z}/{x}/{y}{ratio}.png',\n                ],\n                tileSize: 256,\n                attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n                maxzoom: 19,\n              },\n            },\n            layers: [\n              {\n                id: 'osm',\n                type: 'raster',\n                source: 'osm', // This must match the source key above\n              },\n            ],\n            glyphs: 'https://demotiles.maplibre.org/font/{fontstack}/{range}.pbf',\n          },\n          zoom: 6,\n        });\n        /*\n         * move the map to the bounds of the data\n         */\n        let minLng = Number.MAX_VALUE;\n        let maxLng = Number.MIN_VALUE;\n        let minLat = Number.MAX_VALUE;\n        let maxLat = Number.MIN_VALUE;\n        // Find the bounds of the data\n        this.data.forEach(d => {\n          const lng = parseFloat(d['long'].value);\n          const lat = parseFloat(d['lat'].value);\n          minLng = Math.min(minLng, lng);\n          maxLng = Math.max(maxLng, lng);\n          minLat = Math.min(minLat, lat);\n          maxLat = Math.max(maxLat, lat);\n        });\n        const bounds = [\n          [minLng, minLat],\n          [maxLng, maxLat],\n        ];\n        map.fitBounds(bounds, {\n          padding: 50,\n          maxZoom: this.maxZoom,\n          animate: false,\n        });\n        if (this.disableScrollZoom) {\n          // disable map zoom when using scroll\n          map.scrollZoom.disable();\n        }\n        if (this.displayMapNavigationControls) {\n          // Add zoom and rotation controls to the map.\n          map.addControl(new MapLibre.NavigationControl());\n        }\n        map.on('load', () => {\n          map.addSource('places', {\n            type: 'geojson',\n            data: createGeoJSON(this.data, this.labelIndices),\n          });\n          const maxRadius = Math.max(...this.data.map(d => { var _a; return parseInt((_a = d['radius']) === null || _a === void 0 ? void 0 : _a.value) || 0; })); // get the max radius (if any)\n          let colorSteps;\n          if (this.colorScale.length < 2) {\n            colorSteps = this.colorScale[0];\n          }\n          else {\n            colorSteps = ['step', ['get', 'typeindex']];\n            for (let i = 0; i < this.colorScale.length; i++) {\n              if (i > 0)\n                colorSteps.push(i);\n              colorSteps.push(this.colorScale[i]);\n            }\n          }\n          map.addLayer({\n            id: 'circles',\n            type: 'circle',\n            source: 'places',\n            paint: {\n              'circle-color': colorSteps,\n              'circle-radius': maxRadius ? ['interpolate', ['linear'], ['get', 'radius'], 0, this.radiusMin, maxRadius, this.radiusMax] : this.radiusMin,\n              'circle-opacity': 0.8,\n            },\n          });\n          //   Add popups to the markers\n          const handleMarkerClick = e => {\n            const coordinates = e.features[0].geometry.coordinates;\n            // let html = `<ul>`;\n            const popupData = e.features.map((feature) => {\n              let children = [];\n              try {\n                children = JSON.parse(feature.properties.children);\n              }\n              catch (_a) { }\n              const popupItem = {\n                label: feature.properties.label,\n                url: feature.properties.link,\n                suffix: feature.properties.number,\n                items: children.map(c => ({\n                  label: c === null || c === void 0 ? void 0 : c.label,\n                  url: c === null || c === void 0 ? void 0 : c.url,\n                })),\n              };\n              return popupItem;\n            });\n            const el = document.createElement('geov-map-circles-popup');\n            el.items = popupData;\n            new MapLibre.Popup().setLngLat(coordinates).setDOMContent(el).setMaxWidth('340px').addTo(map);\n          };\n          // An on click event listener for the \"circles\" layer\n          map.on('click', 'circles', handleMarkerClick);\n          map.on('mouseenter', 'circles', () => {\n            map.getCanvas().style.cursor = 'pointer';\n          });\n          map.on('mouseleave', 'circles', () => {\n            map.getCanvas().style.cursor = '';\n          });\n        });\n      }\n    }\n  }\n  render() {\n    return (h(Host, null, h(\"ion-card\", { class: `legend ${this.ledgendExpanded ? '' : 'collapsed'}` }, h(\"ion-card-header\", null, h(\"ion-button\", { size: \"small\", class: \"collapse-button\", fill: \"clear\", onClick: () => (this.ledgendExpanded = !this.ledgendExpanded) }, h(\"ion-icon\", { icon: this.ledgendExpanded ? closeOutline : informationCircleOutline, slot: \"icon-only\" }))), h(\"ion-list\", null, this.labelIndices.map((type, i) => (h(\"ion-item\", { lines: i === this.labelIndices.length - 1 ? 'none' : 'full' }, h(\"svg\", { slot: \"start\", height: \"1rem\", width: \"1rem\" }, h(\"circle\", { cx: \"50%\", cy: \"50%\", r: \"50%\", fill: this.colorScale[i % this.colorScale.length] })), h(\"ion-label\", { class: \"ion-text-wrap\" }, type)))))), h(\"div\", { class: \"geov-map-circles-container\", ref: el => (this.mapContainerEl = el) })));\n  }\n  static get is() { return \"geov-yasgui-map-circles\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-yasgui-map-circles.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-yasgui-map-circles.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"data\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Parser.Binding[]\",\n          \"resolved\": \"Binding[]\",\n          \"references\": {\n            \"Parser\": {\n              \"location\": \"import\",\n              \"path\": \"@triply/yasr\",\n              \"id\": \"\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"defaultValue\": \"[\\n    {\\n      radius: { value: '80.2345', type: 'literal' },\\n      number: { value: '0', type: 'literal' },\\n      type: { value: 'default', type: 'literal' },\\n      long: { value: '8.2318', type: 'literal' },\\n      lat: { value: '46.7985', type: 'literal' },\\n      label: { value: 'default', type: 'literal' },\\n      link: { value: 'default', type: 'literal' },\\n    },\\n  ]\"\n      },\n      \"radiusMin\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The minimum radius of a circle.\"\n        },\n        \"attribute\": \"radius-min\",\n        \"reflect\": false,\n        \"defaultValue\": \"8\"\n      },\n      \"radiusMax\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The maximum radius of a circle.\"\n        },\n        \"attribute\": \"radius-max\",\n        \"reflect\": false,\n        \"defaultValue\": \"20\"\n      },\n      \"maxZoom\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The maximum zoom level to allow when the map view transitions to the specified bounds,\\nwhen the map is initialized.\"\n        },\n        \"attribute\": \"max-zoom\",\n        \"reflect\": false,\n        \"defaultValue\": \"10\"\n      },\n      \"colorScale\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string[]\",\n          \"resolved\": \"string[]\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"defaultValue\": \"['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c']\"\n      },\n      \"ledgendExpanded\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If true, the legend is expanded, else collapsed\"\n        },\n        \"attribute\": \"ledgend-expanded\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"disableScrollZoom\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If true, prevents scroll from zooming the map.\"\n        },\n        \"attribute\": \"disable-scroll-zoom\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"displayMapNavigationControls\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If true, adds zoom and rotation controls to the map.\"\n        },\n        \"attribute\": \"display-map-navigation-controls\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"labelIndices\": {}\n    };\n  }\n}\n//# sourceMappingURL=geov-yasgui-map-circles.js.map\n"],"version":3}