{"file":"geov-yasgui.entry.esm.js","mappings":"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","names":[],"sources":["node_modules/@geovistory/design-system-web/dist/collection/lib/importYasgui.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-yasgui/PluginMapCircles.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-yasgui/geov-yasgui.css?tag=geov-yasgui","node_modules/@geovistory/design-system-web/dist/collection/components/geov-yasgui/geov-yasgui.js"],"sourcesContent":["import { isNode } from \"./isNode\";\n/**\n * Load and return plotly library from CDN in browsers.\n * In node server environment returns null.\n * @returns Yasgui (in browser) or null (in server)\n */\nexport const importYasgui = async () => new Promise((resolve, reject) => {\n  // if we are on a node server resolve with null\n  if (isNode())\n    return resolve(null);\n  // if Yasgui is already defined resolve it\n  if ('Yasgui' in window) {\n    return resolve(window['Yasgui']);\n  }\n  // create new script element\n  const script = document.createElement('script');\n  // register on load callback and resolve Yasgui\n  script.onload = () => resolve(window['Yasgui']);\n  // register on error callback and reject\n  script.onerror = reject;\n  // set url\n  script.src = 'https://cdn.jsdelivr.net/npm/@triply/yasgui@4.2.28/build/yasgui.min.js';\n  // append script to load Yasgui JS from CDN to document\n  document.body.appendChild(script);\n  // create new link element\n  const link = document.createElement('link');\n  link.href = 'https://cdn.jsdelivr.net/npm/@triply/yasgui@4.2.28/build/yasgui.min.css';\n  link.rel = 'stylesheet';\n  link.type = 'text/css';\n  // append link to load Yasgui CSS from CDN to document\n  document.body.appendChild(link);\n});\n//# sourceMappingURL=importYasgui.js.map\n","import { mapOutline } from \"ionicons/icons\";\nexport default function generatePluginMapCircles(config) {\n  return class PluginMapCircles {\n    constructor(yasr) {\n      // A priority value. If multiple plugin support rendering of a result, this value is used\n      // to select the correct plugin\n      this.priority = 10;\n      // Whether to show a select-button for this plugin\n      this.hideFromSelection = false;\n      this.label = 'Map Circles';\n      this.expectedKeys = [\n        {\n          name: 'radius',\n          required: false,\n          customValidator: val => {\n            if (Number(val === null || val === void 0 ? void 0 : val.value) > 0)\n              return;\n            return new Set(['must be parsable to a number, and bigger than 0']);\n          },\n        },\n        {\n          name: 'number',\n          required: false,\n          customValidator: val => {\n            if (!isNaN(Number(val === null || val === void 0 ? void 0 : val.value)))\n              return;\n            return new Set(['must be parsable to a number']);\n          },\n        },\n        {\n          name: 'long',\n          required: true,\n          customValidator: val => {\n            const parsed = Number(val === null || val === void 0 ? void 0 : val.value);\n            if (parsed >= -180 && parsed <= 180)\n              return;\n            return new Set(['must be parsable to a number in the range -180 and +180']);\n          },\n        },\n        {\n          name: 'lat',\n          required: true,\n          customValidator: val => {\n            const parsed = Number(val === null || val === void 0 ? void 0 : val.value);\n            if (parsed >= -90 && parsed <= 90)\n              return;\n            return new Set(['must be parsable to a number in the range -90 and +90']);\n          },\n        },\n      ];\n      this.yasr = yasr;\n    }\n    // Draw the result set. This plugin creates a <geov-yasgui-map-circles/ data=[...]>\n    draw() {\n      const elValidation = document.createElement('geov-yasgui-data-validation');\n      const data = this.yasr.results.getBindings();\n      elValidation.data = data;\n      elValidation.expectedKeys = this.expectedKeys;\n      this.yasr.resultsEl.appendChild(elValidation);\n      this.yasr.resultsEl.classList.add('ion-padding');\n      // listen for the validation result\n      elValidation.addEventListener('validationCompleted', (isValid) => {\n        var _a;\n        // if data is valid ...\n        if (isValid.detail) {\n          // create the timeline element\n          const elVisual = document.createElement('geov-yasgui-map-circles');\n          elVisual.data = data;\n          elVisual.style.height = (_a = config === null || config === void 0 ? void 0 : config.mapHeight) !== null && _a !== void 0 ? _a : '400px';\n          for (const key in config) {\n            elVisual[key] = config[key];\n          }\n          // remove validation element\n          this.yasr.resultsEl.classList.remove('ion-padding');\n          this.yasr.resultsEl.removeChild(elValidation);\n          // append timeline element\n          this.yasr.resultsEl.appendChild(elVisual);\n        }\n      });\n    }\n    // A required function, used to indicate whether this plugin can draw the current\n    // resultset from yasr\n    canHandleResults() {\n      return !this.yasr.results.hasError();\n    }\n    // A required function, used to identify the plugin, works best with an svg\n    getIcon() {\n      const textIcon = document.createElement('ion-icon');\n      textIcon.icon = mapOutline;\n      return textIcon;\n    }\n  };\n}\n//# sourceMappingURL=PluginMapCircles.js.map\n","geov-yasgui {\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n\ngeov-yasgui .toggle-button {\n  position: absolute;\n  z-index: 1000;\n  right: var(--ion-padding, 1rem);\n  top: var(--ion-padding, 1rem);\n}\n\ngeov-yasgui.toggling .tabsList,\ngeov-yasgui.toggling .yasr_header,\ngeov-yasgui.toggling .yasqe .resizeWrapper,\ngeov-yasgui.toggling .yasqe .CodeMirror,\ngeov-yasgui.toggling .controlbar {\n  transition: all .2s ease-in;\n  overflow: hidden;\n}\n\ngeov-yasgui .tabsList.collapsed,\ngeov-yasgui .yasr_header.collapsed,\ngeov-yasgui .yasqe.collapsed .resizeWrapper,\ngeov-yasgui .controlbar.collapsed,\ngeov-yasgui .yasqe.collapsed .CodeMirror {\n  transition: all .2s ease-out;\n  overflow: hidden;\n}\n\ngeov-yasgui .tabsList.collapsed,\ngeov-yasgui .yasr_header.collapsed,\ngeov-yasgui .yasqe.collapsed .resizeWrapper {\n  height: 0px;\n}\n\ngeov-yasgui .controlbar.collapsed {\n  max-height: 0px;\n}\n\ngeov-yasgui .yasqe.collapsed .CodeMirror {\n  height: 0px !important;\n  border: none;\n  min-height: 0px;\n}\n\ngeov-yasgui .yasr.collapsed {\n  margin-top: 0px;\n}\n","import { Host, h } from \"@stencil/core\";\nimport { importYasgui } from \"../../lib/importYasgui\";\nimport generatePluginMapCircles from \"./PluginMapCircles\";\nimport { closeOutline, settingsOutline } from \"ionicons/icons\";\nimport { isNode } from \"../../lib/isNode\";\n/**\n * Yasgui is a SPARQL query editor and results visualizer.\n *\n * The component is a wrapper around the Yasgui library it can also use custom plugins.\n */\nexport class GeovYasgui {\n  constructor() {\n    // True during 200ms of toggling\n    this.toggling = false;\n    this.plugins = new Set();\n    this.collapse = false;\n    this.defaultPlugin = 'table';\n    this.pluginOrder = ['table', 'response'];\n    this.pluginConfig = {};\n    this.queryTabs = [];\n    this.hideYasqueToggle = false;\n  }\n  async componentWillLoad() {\n    this.Y = await importYasgui();\n  }\n  componentDidLoad() {\n    // If we are in a browser\n    if (!isNode()) {\n      this.setupYasr();\n      localStorage.removeItem('yagui__config');\n      if (!this.el)\n        return;\n      const yasgui = new this.Y(this.el, {});\n      // close initial tab\n      if (this.queryTabs.length)\n        yasgui.getTab().close();\n      // add tabs\n      const tabDefaults = this.Y.Tab.getDefaults();\n      this.queryTabs.forEach((q, i) => {\n        var _a;\n        yasgui.addTab(i === 0, Object.assign(Object.assign({}, tabDefaults), { id: 'tab' + i, requestConfig: Object.assign(Object.assign({}, tabDefaults.requestConfig), { endpoint: q.sparqlEndpoint }), name: q.name, yasqe: { value: q.query }, yasr: Object.assign(Object.assign({}, tabDefaults.yasr), { settings: {\n              selectedPlugin: (_a = q.selectedPlugin) !== null && _a !== void 0 ? _a : this.defaultPlugin,\n            } }) }), { avoidDuplicateTabs: true });\n      });\n      // execute query of active tab\n      yasgui.getTab().query();\n      // set Yasque visibility\n      this.setYasqueVisibility();\n    }\n  }\n  toggleVisiblity() {\n    if (this.toggling)\n      return;\n    this.collapse = !this.collapse;\n    this.setYasqueVisibility();\n  }\n  async setYasqueVisibility() {\n    this.toggling = true;\n    this.el.classList.add('toggling');\n    const elementsToSwitchVis = this.el.querySelectorAll('.yasr, .yasr_header, .yasqe, .tabsList, .controlbar');\n    elementsToSwitchVis.forEach(ele => {\n      this.collapse ? ele.classList.add('collapsed') : ele.classList.remove('collapsed');\n    });\n    await new Promise(res => setTimeout(res, 200));\n    this.el.classList.remove('toggling');\n    this.toggling = false;\n  }\n  /**\n   * Setup yasr configuration\n   */\n  setupYasr() {\n    this.registerCustomPlugins();\n    this.setPluginOrder();\n  }\n  /**\n   * Register custom yasr plugins\n   */\n  registerCustomPlugins() {\n    var _a;\n    const customPlugins = {\n      mapCircles: generatePluginMapCircles(this.pluginConfig.mapCircles),\n    };\n    (_a = this.plugins) === null || _a === void 0 ? void 0 : _a.forEach(plugin => {\n      if (!!customPlugins[plugin])\n        this.Y.Yasr.registerPlugin(plugin, customPlugins[plugin]);\n    });\n  }\n  /**\n   * Set yasr plugin order\n   */\n  setPluginOrder() {\n    this.Y.Yasr.defaults.pluginOrder = this.pluginOrder;\n  }\n  render() {\n    return (h(Host, null, !this.hideYasqueToggle && (h(\"ion-button\", { class: \"toggle-button\", size: \"small\", onClick: () => this.toggleVisiblity(), title: this.collapse ? 'Show query' : 'Hide query' }, this.collapse ? h(\"ion-icon\", { slot: \"icon-only\", icon: settingsOutline }) : h(\"ion-icon\", { slot: \"icon-only\", icon: closeOutline })))));\n  }\n  static get is() { return \"geov-yasgui\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-yasgui.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-yasgui.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"plugins\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Set<CustomPlugin>\",\n          \"resolved\": \"Set<\\\"mapCircles\\\">\",\n          \"references\": {\n            \"Set\": {\n              \"location\": \"global\",\n              \"id\": \"global::Set\"\n            },\n            \"CustomPlugin\": {\n              \"location\": \"local\",\n              \"path\": \"/Users/admin/Gorg/design-system/packages/design-system-web/src/components/geov-yasgui/geov-yasgui.tsx\",\n              \"id\": \"src/components/geov-yasgui/geov-yasgui.tsx::CustomPlugin\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Plugins to enable (in addition to the built-in plugins: response, table, error, boolean)\"\n        },\n        \"defaultValue\": \"new Set()\"\n      },\n      \"collapse\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Collapse the GUI elements of Yasgui\"\n        },\n        \"attribute\": \"collapse\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"defaultPlugin\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Plugin\",\n          \"resolved\": \"\\\"mapCircles\\\" | \\\"response\\\" | \\\"table\\\"\",\n          \"references\": {\n            \"Plugin\": {\n              \"location\": \"local\",\n              \"path\": \"/Users/admin/Gorg/design-system/packages/design-system-web/src/components/geov-yasgui/geov-yasgui.tsx\",\n              \"id\": \"src/components/geov-yasgui/geov-yasgui.tsx::Plugin\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The plugin initially activated\"\n        },\n        \"attribute\": \"default-plugin\",\n        \"reflect\": false,\n        \"defaultValue\": \"'table'\"\n      },\n      \"pluginOrder\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Plugin[]\",\n          \"resolved\": \"Plugin[]\",\n          \"references\": {\n            \"Plugin\": {\n              \"location\": \"local\",\n              \"path\": \"/Users/admin/Gorg/design-system/packages/design-system-web/src/components/geov-yasgui/geov-yasgui.tsx\",\n              \"id\": \"src/components/geov-yasgui/geov-yasgui.tsx::Plugin\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The order of plugin tabs\"\n        },\n        \"defaultValue\": \"['table', 'response']\"\n      },\n      \"pluginConfig\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"PluginConfig\",\n          \"resolved\": \"PluginConfig\",\n          \"references\": {\n            \"PluginConfig\": {\n              \"location\": \"local\",\n              \"path\": \"/Users/admin/Gorg/design-system/packages/design-system-web/src/components/geov-yasgui/geov-yasgui.tsx\",\n              \"id\": \"src/components/geov-yasgui/geov-yasgui.tsx::PluginConfig\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The config of plugins\"\n        },\n        \"defaultValue\": \"{}\"\n      },\n      \"queryTabs\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"QueryTab[]\",\n          \"resolved\": \"QueryTab[]\",\n          \"references\": {\n            \"QueryTab\": {\n              \"location\": \"local\",\n              \"path\": \"/Users/admin/Gorg/design-system/packages/design-system-web/src/components/geov-yasgui/geov-yasgui.tsx\",\n              \"id\": \"src/components/geov-yasgui/geov-yasgui.tsx::QueryTab\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"For each item in this array a tab will be added to Yasgui.\\n`QueryTab: { name: 'Tab name', sparqlEndpoint: 'https://...', query: 'SELECT ?s ?p ?o' }`\"\n        },\n        \"defaultValue\": \"[]\"\n      },\n      \"hideYasqueToggle\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If true, the button to toggle the query (Yasque) is hidden.\"\n        },\n        \"attribute\": \"hide-yasque-toggle\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n}\n//# sourceMappingURL=geov-yasgui.js.map\n"],"version":3}