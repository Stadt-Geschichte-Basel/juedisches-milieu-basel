{"file":"geov-list-item-nested-properties.entry.esm.js","mappings":"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","names":[],"sources":["node_modules/@geovistory/design-system-web/dist/collection/components/geov-list-item-nested-properties/geov-list-item-nested-properties.css?tag=geov-list-item-nested-properties&encapsulation=shadow","node_modules/@geovistory/design-system-web/dist/collection/components/geov-list-item-nested-properties/geov-list-item-nested-properties.js"],"sourcesContent":[":host {\n  display: block;\n  width: 100%;\n}\n\ngeov-display-string-literal {\n  --border-top: none;\n  --padding-start: 0;\n  --min-height: 0;\n  --inner-padding-end: 0;\n}\n\ngeov-time-span {\n  display: inline;\n  padding-left: 1rem;\n  color: var(--ion-color-step-600);\n}\n\nion-item {\n  --padding-start: 0;\n}\n\n.containerForQuery {\n  container-type: inline-size;\n}\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.header {\n  padding: 1rem 16px 0.5rem 0;\n  flex-basis: 200px;\n  flex-grow: 1;\n  flex-shrink: 0;\n  border-bottom: dashed 1px var(--border-color);\n  border-right: dashed 1px var(--ion-color-tertiary);\n}\n\n.content ion-col {\n  flex-basis: 300px;\n}\n\n.content {\n  padding: 0.5rem 0 0.5rem 16px;\n  flex-basis: 300px;\n  flex-grow: 1;\n  flex-shrink: 0;\n}\n\n.header .classLabelContainer {\n  color: var(--gv-class-link-color, #000);\n}\n\n.header a.classLabel {\n  color: var(--gv-class-link-color, #000);\n  text-decoration: var(--gv-class-link-decoration);\n}\n\n.header a.classLabel:hover {\n  text-decoration: underline;\n}\n\n.nestedProp .propLabelWrapper a.propLabel {\n  color: var(--gv-property-link-color, #000);\n  text-decoration: var(--gv-property-link-decoration);\n}\n\n.nestedProp .propLabelWrapper a.propLabel:hover {\n  text-decoration: underline;\n}\n\nion-col {\n  padding: 0;\n  margin: 0;\n}\n\na.entityLink {\n  color: var(--gv-entity-link-color, #000);\n  text-decoration: var(--gv-entity-link-decoration);\n}\n\na.entityLink:hover {\n  text-decoration: underline;\n}\n\n.timespanLabel geov-time-span {\n  padding: 0;\n}\n\n.pointer {\n  cursor: pointer;\n}\n\n@container (width > 532px) {\n  .container {\n    flex-wrap: nowrap;\n  }\n\n  .header {\n    flex-grow: 0;\n    border-right: dashed 1px var(--border-color);\n    border-bottom: none;\n  }\n\n  .content ion-col {\n    flex-basis: 0px;\n  }\n}\n","import { Host, h } from \"@stencil/core\";\nimport { getTimeSpanUri } from \"../../lib/getTimeSpanUri\";\nimport { regexReplace } from \"../../lib/regexReplace\";\nimport { sparqlJson } from \"../../lib/sparqlJson\";\nimport { getSSRData } from \"../../lib/ssr/getSSRData\";\nimport { setSSRData } from \"../../lib/ssr/setSSRData\";\nimport { setSSRId } from \"../../lib/ssr/setSSRId\";\nconst qrNestedProps = (entityUri, language) => {\n  return ` PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n    PREFIX owl: <http://www.w3.org/2002/07/owl#>\n    PREFIX xml: <http://www.w3.org/XML/1998/namespace>\n    PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n    PREFIX geo: <http://www.opengis.net/ont/geosparql#>\n    PREFIX time: <http://www.w3.org/2006/time#>\n    PREFIX ontome: <https://ontome.net/ontology/>\n    PREFIX geov: <http://geovistory.org/resource/>\n\n    SELECT\n      ?predicate # predicate uri\n      ?count # count of props per predicate\n      ?object # one sample object per predicate\n      (GROUP_CONCAT(DISTINCT ?pLabel; separator=\", \") as ?predicateLabel) # predicate label\n      (GROUP_CONCAT(DISTINCT ?oLabel; separator=\", \") as ?objectLabel) # object label\n    WHERE {\n\n      # Innermost subquery:\n      {\n        # Select all properties of entity, group by predicate, count\n        # and select one sample object per predicate\n        SELECT ?predicate (count(?predicate) as ?count) (sample(?o) as ?object) WHERE {\n          <${entityUri}> ?predicate ?o.\n        }\n        GROUP BY ?predicate\n      }.\n\n      # Left join predicate labels\n      OPTIONAL {\n        ?predicate rdfs:label ?pLabel . FILTER(LANG(?pLabel) IN (\"${language}\", \"en\")) .\n      }.\n\n      # Left join add object labels\n      OPTIONAL {\n        ?object rdfs:label ?oLabel\n      }.\n  }\n\n  GROUP BY ?predicate ?count ?object\n  # limit to max 50 predicate groups\n  LIMIT 50`;\n};\n/**\n * This component displays information about an entity (URI) in a compact way.\n */\nexport class GeovListItemNestedProperties {\n  /*\n   * assigns an id to the component\n   */\n  constructor() {\n    this._ssrId = undefined;\n    this.data = undefined;\n    this.fetchBeforeRender = true;\n    this.sparqlEndpoint = undefined;\n    this.entityUri = undefined;\n    this.language = 'en';\n    this.predicateInclude = undefined;\n    this.predicateExclude = undefined;\n    this.uriRegex = undefined;\n    this.uriReplace = undefined;\n    this.color = '';\n    this.parent = undefined;\n    setSSRId(this);\n  }\n  async componentWillLoad() {\n    if (this.fetchBeforeRender) {\n      /**\n       * try to get data from ssr\n       */\n      this.data = getSSRData(this._ssrId);\n    }\n    if (!this.data) {\n      // set data to loading (in immutable way)\n      this.data = {\n        loading: true,\n      };\n      // fetch data via http\n      await this.fetchData() // <- await this promise!\n        .then(d => {\n        var _a;\n        // filter language\n        d.nestedProps = (_a = d.nestedProps) !== null && _a !== void 0 ? _a : []; // this.filterByLanguage(d.nestedProps ?? [], this.language);\n        this.data = d;\n        setSSRData(this._ssrId, d);\n        return d;\n      })\n        .catch(d => {\n        this.data = d;\n        return d;\n      });\n    }\n  }\n  render() {\n    var _a, _b;\n    const { rdfTypeProp, rdfsLabelProp, restProps } = this.splitProps(this.data.nestedProps);\n    return (h(Host, null, h(\"div\", { class: \"containerForQuery\" }, h(\"div\", { class: \"container\" }, h(\"div\", { class: \"header\" }, h(\"div\", { class: 'classLabelContainer' }, h(\"geov-entity-class-icon\", { classURI: rdfTypeProp.object.value }), h(\"a\", { href: rdfTypeProp.object.value, target: \"_blank\", class: \"classLabel\" }, (_a = rdfTypeProp === null || rdfTypeProp === void 0 ? void 0 : rdfTypeProp.objectLabel) === null || _a === void 0 ? void 0 : _a.value), ' ', h(\"div\", { class: 'timespanLabel' }, h(\"geov-time-span\", { sparqlEndpoint: this.sparqlEndpoint, entityUri: getTimeSpanUri(this.entityUri) }))), h(\"div\", { class: 'entityLabelContainer' }, h(\"a\", { href: this.prepareUrl(this.entityUri), target: \"_blank\", class: \"entityLink\" }, (_b = rdfsLabelProp === null || rdfsLabelProp === void 0 ? void 0 : rdfsLabelProp.object) === null || _b === void 0 ? void 0 : _b.value))), h(\"div\", { class: \"content\" }, h(\"ion-row\", null, restProps.map(b => {\n      var _a;\n      return (h(\"ion-col\", null, h(\"ion-item\", { lines: \"none\", class: \"nestedProp\" }, h(\"ion-label\", null, h(\"p\", { class: \"propLabelWrapper\" }, this.renderPredicateLabel(b.predicateLabel, b.predicate)), this.countBiggerThanOne(b.count) ? (h(\"p\", null, this.renderModal(b, (_a = rdfTypeProp === null || rdfTypeProp === void 0 ? void 0 : rdfTypeProp.objectLabel) === null || _a === void 0 ? void 0 : _a.value))) : (h(\"h3\", null, this.renderObject(b.object, b.objectLabel, this.getPredicateLabel(b.predicateLabel, b.predicate))))))));\n    }))))), h(\"slot\", null)));\n  }\n  /**\n   * Splits the property array into three parts:\n   * - one rdfs:label prop (entity label)\n   * - one rdf:type prop (class label)\n   * - all other props\n   * @param props\n   * @returns\n   */\n  splitProps(props) {\n    let rdfsLabelProp;\n    let rdfTypeProp;\n    const restProps = [];\n    for (const p of props) {\n      if (p.predicate.value === 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type')\n        rdfTypeProp = p;\n      else if (p.predicate.value === 'http://www.w3.org/2000/01/rdf-schema#label')\n        rdfsLabelProp = p;\n      // push to rest, unless it is the inverse prop of parent\n      else if (!this.isInverseOfParent(p))\n        restProps.push(p);\n    }\n    // sort by prop label A-Z\n    restProps.sort((a, b) => {\n      var _a, _b, _c, _d;\n      const labelA = (_b = (_a = a === null || a === void 0 ? void 0 : a.predicateLabel) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : '';\n      const labelB = (_d = (_c = b === null || b === void 0 ? void 0 : b.predicateLabel) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : '';\n      return labelA.localeCompare(labelB);\n    });\n    return {\n      rdfTypeProp,\n      rdfsLabelProp,\n      restProps,\n    };\n  }\n  /**\n   * If the property is the inverse of the parent property, return true, else false.\n   *\n   * @param p\n   */\n  isInverseOfParent(p) {\n    var _a, _b, _c;\n    if (!((_a = this.parent) === null || _a === void 0 ? void 0 : _a.predicateUri) || !((_b = this.parent) === null || _b === void 0 ? void 0 : _b.subjectUri))\n      return false;\n    // if we have more then one props of this predicate, we in in fact have a\n    // group of properties. This group is not identical to the parent property,\n    // which is only one property by definition\n    if (parseInt((_c = p.count) === null || _c === void 0 ? void 0 : _c.value) > 1)\n      return false;\n    const thisPredicate = p.predicate.value;\n    const parentPredicate = this.parent.predicateUri;\n    const isInversePredicate = () => {\n      const overlapOne = thisPredicate.replace(parentPredicate, '');\n      const overlapTwo = parentPredicate.replace(thisPredicate, '');\n      return overlapOne === 'i' || overlapTwo == 'i';\n    };\n    // it is inverse, in case object = parentSubject and predicate isInverseOf parentPredicate\n    if (p.object.value === this.parent.subjectUri && isInversePredicate())\n      return true;\n    return false;\n  }\n  async fetchData() {\n    let d = {\n      loading: true,\n    };\n    const query = qrNestedProps(this.entityUri, this.language);\n    await sparqlJson(this.sparqlEndpoint, query)\n      .then(res => {\n      var _a;\n      d = {\n        loading: false,\n        nestedProps: (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings,\n      };\n    })\n      .catch(_ => {\n      d = {\n        loading: false,\n        error: true,\n      };\n    });\n    return d;\n  }\n  /**\n   * render the predicate label\n   * @param predicateLabel\n   * @param predicate\n   * @returns jsx element\n   */\n  renderPredicateLabel(predicateLabel, predicate) {\n    return (h(\"a\", { class: \"propLabel\", href: predicate.value, target: \"_blank\" }, this.getPredicateLabel(predicateLabel, predicate)));\n  }\n  /**\n   * extract the predicate label string from predicate label and predicate bindings.\n   * It returns the predicate label, if available, else the predicate uri.\n   * in case the predicate uri is rendered, abbreviate the most common uris.\n   * @param predicateLabel\n   * @param predicate\n   * @returns string\n   */\n  getPredicateLabel(predicateLabel, predicate) {\n    var _a;\n    return (_a = predicateLabel === null || predicateLabel === void 0 ? void 0 : predicateLabel.value) !== null && _a !== void 0 ? _a : predicate.value.replace('http://www.w3.org/2000/01/rdf-schema#', 'rdfs:').replace('http://www.w3.org/1999/02/22-rdf-syntax-ns#', 'rdf:');\n  }\n  /**\n   * render the count information (only if count > 1)\n   * @param count\n   * @returns jsx element\n   */\n  renderModal(nestedProps, title) {\n    var _a, _b;\n    return (h(\"geov-entity-predicate-modal\", { modalTitle: title, sparqlEndpoint: this.sparqlEndpoint, entityUri: this.entityUri, totalCount: parseInt((_a = nestedProps.count) === null || _a === void 0 ? void 0 : _a.value), language: this.language, predicateUri: nestedProps.predicate.value, predicateLabel: nestedProps.predicateLabel.value, fetchBeforeRender: false }, h(\"span\", { class: \"pointer\" }, \" \", (_b = nestedProps.count) === null || _b === void 0 ? void 0 :\n      _b.value, \" items...\")));\n  }\n  /**\n   * Check if count is bigger than 1.\n   * @param count\n   * @returns true if count > 1, else false.\n   */\n  countBiggerThanOne(count) {\n    const c = parseInt(count === null || count === void 0 ? void 0 : count.value);\n    return c > 1;\n  }\n  renderObject(object, objectLabel, modalTitle) {\n    var _a;\n    // if object is a URI\n    if ((object === null || object === void 0 ? void 0 : object.type) === 'uri') {\n      return (h(\"a\", { href: this.prepareUrl(object === null || object === void 0 ? void 0 : object.value), target: \"_blank\", class: \"entityLink\" }, (_a = objectLabel === null || objectLabel === void 0 ? void 0 : objectLabel.value) !== null && _a !== void 0 ? _a : object === null || object === void 0 ? void 0 : object.value));\n    }\n    // return object?.value;\n    // else it is a literal\n    switch (object === null || object === void 0 ? void 0 : object.datatype) {\n      case 'http://www.opengis.net/ont/geosparql#wktLiteral':\n        return h(\"geov-display-geosparql-wktliteral\", { color: this.color, value: object === null || object === void 0 ? void 0 : object.value });\n      case 'http://www.w3.org/1999/02/22-rdf-syntax-ns#langString':\n      case 'http://www.w3.org/2001/XMLSchema#string':\n      default:\n        return h(\"geov-display-string-literal\", { color: this.color, modalTitle: modalTitle, label: object === null || object === void 0 ? void 0 : object.value, language: object === null || object === void 0 ? void 0 : object['xml:lang'] });\n    }\n  }\n  /**\n   * Prepares a url by applying the uirRegex and uriReplace\n   *\n   * @param url\n   * @returns string\n   */\n  prepareUrl(url) {\n    return regexReplace(url, this.uriRegex, this.uriReplace);\n  }\n  static get is() { return \"geov-list-item-nested-properties\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-list-item-nested-properties.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-list-item-nested-properties.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"_ssrId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"declares an _ssrId property that is reflected as attribute\"\n        },\n        \"attribute\": \"_ssr-id\",\n        \"reflect\": true\n      },\n      \"fetchBeforeRender\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"if true, componentWillLoad() returns a promise for the loading of all data [default: true]\"\n        },\n        \"attribute\": \"fetch-before-render\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"sparqlEndpoint\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"sparqlEndpoint\\nURL of the sparql endpoint\"\n        },\n        \"attribute\": \"sparql-endpoint\",\n        \"reflect\": false\n      },\n      \"entityUri\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"entityId\\nUri of subject, e.g. 'http://www.geovistory.org/ressource/iXXX'\"\n        },\n        \"attribute\": \"entity-uri\",\n        \"reflect\": false\n      },\n      \"language\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"language\\nprints the label with the language or english, if not found, e.g. 'en'\"\n        },\n        \"attribute\": \"language\",\n        \"reflect\": false,\n        \"defaultValue\": \"'en'\"\n      },\n      \"predicateInclude\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"predicateInclude\\nComma separated list of predicate URI's to include, e.g:\\nFetch only the rdfs:label and p86i (was born)\\n'http://www.w3.org/2000/01/rdf-schema#label,https://ontome.net/ontology/p86i'\"\n        },\n        \"attribute\": \"predicate-include\",\n        \"reflect\": false\n      },\n      \"predicateExclude\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"predicateExclude\\nComma separated list of predicate URI's to exclude, e.g:\\nDon't fetch the rdfs:label and p86i (was born)\\n'http://www.w3.org/2000/01/rdf-schema#label,https://ontome.net/ontology/p86i'\"\n        },\n        \"attribute\": \"predicate-exclude\",\n        \"reflect\": false\n      },\n      \"uriRegex\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriRegex\\nOptional regex with capturing groups to transform\\nthe uri into the desired url. To use together\\nwith uriReplace.\"\n        },\n        \"attribute\": \"uri-regex\",\n        \"reflect\": false\n      },\n      \"uriReplace\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriReplace\\nString used to replace the uriRegex.\\n\\nExample (pseudo code):\\nconst uriRegex = (http:\\\\/\\\\/geovistory.org\\\\/)(.*)\\nconst uriReplace = \\\"http://dev.geovistory.org/resource/$2?p=123\\\"\\nhttp://geovistory.org/resource/i54321 => http://dev.geovistory.org/resource/54321?p=123\"\n        },\n        \"attribute\": \"uri-replace\",\n        \"reflect\": false\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never>\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"@ionic/core\",\n              \"id\": \"\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Color assigned to ion-item\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": false,\n        \"defaultValue\": \"''\"\n      },\n      \"parent\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"{ subjectUri: string; predicateUri: string }\",\n          \"resolved\": \"{ subjectUri: string; predicateUri: string; }\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"parent subject and predicate\\nIf given, the reversed nested property is hidden, if the parent subject is the only\\nobject of the nested prop\"\n        }\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"data\": {}\n    };\n  }\n}\n//# sourceMappingURL=geov-list-item-nested-properties.js.map\n"],"version":3}