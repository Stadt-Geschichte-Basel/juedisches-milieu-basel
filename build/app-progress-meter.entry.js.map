{"file":"app-progress-meter.entry.esm.js","mappings":"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","names":[],"sources":["src/components/app-progress-meter/app-progress-meter.css?tag=app-progress-meter","src/components/app-progress-meter/app-progress-meter.tsx"],"sourcesContent":[":host {\n  display: block;\n  --progrss-bar-color: var(--ion-color-step-200, #fff);\n}\n\n.circle {\n  fill: none;\n}\n\n.circle.segment-1 ,\n.circle.segment-2 ,\n.circle.segment-3 {\n  stroke: #7b3f27;\n}\n\n\n.outline {\n  stroke: var(--ion-color-step-500);\n}\n\n.label-1 {\n  fill: var(--ion-color-step-500);\n  font-size: 1.5rem;\n}\n\n.label-2,\n.label-3 {\n  fill: var(--ion-color-step-500);\n  font-size: .8rem;\n}\n","import { Component, Fragment, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'app-progress-meter',\n  styleUrl: 'app-progress-meter.css',\n  shadow: false,\n})\nexport class AppProgressMeter {\n  @Prop() value = 9;\n  @Prop() maxVal = 12;\n\n  wrapper: HTMLDivElement;\n  meter: SVGElement;\n  outlineCurves: SVGElement;\n  low: SVGElement;\n  avg: SVGElement;\n  high: SVGElement;\n  mask: SVGElement;\n  outlineEnds: SVGElement;\n  slider: HTMLInputElement;\n  lbl: HTMLLabelElement;\n\n  // radius of circle (scales to parent)\n  r = 60;\n  // stroke width for outlines\n  strokeOuter = 10;\n  // stroke width for indicator\n  strokeInner = 6;\n  // closing, 1 = semi-circle, 2= full circle\n  closing = 1.6;\n  // gap between label lines\n  labelGap = 6;\n  rotation = 0.5 - (this.closing - 1) / 4;\n  cf = 2 * Math.PI * this.r;\n  semi_cf = (this.closing * this.cf) / 2;\n  semi_cf_1by3 = this.semi_cf / 3;\n  semi_cf_2by3 = this.semi_cf_1by3 * 2;\n  width = 2 * this.r + this.strokeOuter;\n  height = this.width; // / this.closing;\n\n  componentDidLoad() {\n    // set radius\n    [this.outlineCurves, this.low, this.avg, this.high, this.mask, this.outlineEnds].forEach(circle => {\n      circle.setAttribute('r', this.r.toString());\n    });\n    // set inner stroke with\n    [this.low, this.avg, this.high].forEach(e => e.setAttribute('stroke-width', this.strokeInner.toString()));\n    // set outer stroke with\n    [this.outlineCurves, this.mask, this.outlineEnds].forEach(e => e.setAttribute('stroke-width', this.strokeOuter.toString()));\n\n    // set viewbox\n\n    this.meter.setAttribute('viewBox', `0 0 ${this.width} ${this.height}`);\n\n    // set stroke dasharray for all circles except for mask\n    this.outlineCurves.setAttribute('stroke-dasharray', this.semi_cf + ',' + this.cf);\n    this.low.setAttribute('stroke-dasharray', this.semi_cf + ',' + this.cf);\n    this.avg.setAttribute('stroke-dasharray', this.semi_cf_2by3 + ',' + this.cf);\n    this.high.setAttribute('stroke-dasharray', this.semi_cf_1by3 + ',' + this.cf);\n    this.outlineEnds.setAttribute('stroke-dasharray', 2 + ',' + (this.semi_cf - 2));\n  }\n\n  render() {\n    var meter_value = this.semi_cf - (this.value / this.maxVal) * this.semi_cf;\n\n    return (\n      <Fragment>\n        <svg ref={e => (this.meter = e)}>\n          <g style={{ 'transform': 'scaleX(-1)', 'transform-origin': 'center' }}>\n            <g\n              style={{\n                'transform': `rotate(${this.rotation}turn)`,\n                'transform-origin': 'center',\n              }}\n            >\n              <circle ref={e => (this.outlineCurves = e)} class=\"circle outline\" cx=\"50%\" cy=\"50%\"></circle>\n              <circle ref={e => (this.low = e)} class=\"circle segment-1\" cx=\"50%\" cy=\"50%\"></circle>\n              <circle ref={e => (this.avg = e)} class=\"circle segment-2\" cx=\"50%\" cy=\"50%\"></circle>\n              <circle ref={e => (this.high = e)} class=\"circle segment-3\" cx=\"50%\" cy=\"50%\"></circle>\n              <circle ref={e => (this.mask = e)} class=\"circle outline\" cx=\"50%\" cy=\"50%\" stroke-dasharray={meter_value + ',' + this.cf}></circle>\n              <circle ref={e => (this.outlineEnds = e)} class=\"circle outline\" cx=\"50%\" cy=\"50%\"></circle>\n            </g>\n          </g>\n          <text class=\"label-3\" x={this.width / 2} y={this.height / 2 + this.labelGap * 3} dominant-baseline=\"middle\" text-anchor=\"middle\">\n            gel√∂st\n          </text>{' '}\n          <text class=\"label-1\" x={this.width / 2} y={this.height / 2 - this.labelGap} dominant-baseline=\"middle\" text-anchor=\"middle\">\n            {this.value} / {this.maxVal}\n          </text>{' '}\n        </svg>\n      </Fragment>\n    );\n  }\n}\n"],"version":3}