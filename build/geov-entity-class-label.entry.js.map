{"file":"geov-entity-class-label.entry.esm.js","mappings":"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","names":[],"sources":["node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-class-label/geov-entity-class-label.css?tag=geov-entity-class-label&encapsulation=shadow","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-class-label/geov-entity-class-label.js"],"sourcesContent":[":host {\n  display: inline;\n  vertical-align: middle;\n\n}\n\na {\n  color: var(--gv-class-link-color, black);\n  text-decoration: var(--gv-class-link-decoration, none);\n}\n","import { Host, h } from \"@stencil/core\";\nimport { sparqlJson } from \"../../lib/sparqlJson\";\nimport { getSSRData } from \"../../lib/ssr/getSSRData\";\nimport { setSSRData } from \"../../lib/ssr/setSSRData\";\nimport { setSSRId } from \"../../lib/ssr/setSSRId\";\nconst qrLabel = (id) => `\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX geov: <http://geovistory.org/resource/>\n\nSELECT ?classLabel ?t\nWHERE {\n  geov:${id} rdf:type ?t.\n  optional{?t rdfs:label ?classLabel}\n}\nLIMIT 1\n`;\n/**\n * This component fetches and displays the class label of a given Geovistory entity id.\n */\nexport class GeovEntityClassLabel {\n  constructor() {\n    this._ssrId = undefined;\n    this.sparqlEndpoint = undefined;\n    this.entityId = undefined;\n    this.withIcon = false;\n    this.data = undefined;\n    setSSRId(this);\n  }\n  async componentWillLoad() {\n    // try to get data from ssr\n    this.data = getSSRData(this._ssrId);\n    // if no data found, fetchData\n    if (!this.data) {\n      // set data to loading (in immutable way)\n      this.data = { loading: true };\n      await this.fetchData()\n        .then(d => {\n        this.data = d;\n        setSSRData(this._ssrId, d);\n        return d;\n      })\n        .catch(d => {\n        this.data = d;\n        return d;\n      });\n    }\n  }\n  /**\n   * Do the sparql request(s)\n   * @returns a Promise with the data for this component\n   */\n  async fetchData() {\n    return sparqlJson(this.sparqlEndpoint, qrLabel(this.entityId))\n      .then(res => {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n      return Object.assign(Object.assign({}, this.data), { label: (_d = (_c = (_b = (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.classLabel) === null || _d === void 0 ? void 0 : _d.value, classURI: (_h = (_g = (_f = (_e = res === null || res === void 0 ? void 0 : res.results) === null || _e === void 0 ? void 0 : _e.bindings) === null || _f === void 0 ? void 0 : _f[0]) === null || _g === void 0 ? void 0 : _g.t) === null || _h === void 0 ? void 0 : _h.value, loading: false });\n    })\n      .catch(_ => {\n      return Object.assign(Object.assign({}, this.data), { error: true, loading: false });\n    });\n  }\n  render() {\n    return (h(Host, null, h(\"a\", { href: this.data.classURI, target: \"_blank\" }, this.withIcon && h(\"geov-entity-class-icon\", { classURI: this.data.classURI }), this.data.label, this.data.loading && `loading...`, this.data.error && `error!`, !this.data.label && !this.data.loading && !this.data.error && h(\"span\", { class: \"no-label-found\" }, \"no label found\"))));\n  }\n  static get is() { return \"geov-entity-class-label\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-entity-class-label.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-entity-class-label.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"_ssrId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"_ssr-id\",\n        \"reflect\": true\n      },\n      \"sparqlEndpoint\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"sparqlEndpoint\\nURL of the sparql endpoint\"\n        },\n        \"attribute\": \"sparql-endpoint\",\n        \"reflect\": false\n      },\n      \"entityId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"entityId\\nID number of entity, e.g. 'i315800'\"\n        },\n        \"attribute\": \"entity-id\",\n        \"reflect\": false\n      },\n      \"withIcon\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"withIcon\\nAdd an icon in the left of label\"\n        },\n        \"attribute\": \"with-icon\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"data\": {}\n    };\n  }\n}\n//# sourceMappingURL=geov-entity-class-label.js.map\n"],"version":3}