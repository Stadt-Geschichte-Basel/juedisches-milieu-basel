{"file":"app-footnote.entry.esm.js","mappings":";;;AAAA,MAAM,cAAc,GAAG,sFAAsF;;MCQhG,WAAW;;;;;EAGtB,MAAM;IACJ,QACE,EAAC,QAAQ,QACP,gBAAU,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,iBAAiB,GAAa,EAChF,mBAAa,GAAG,EAAE,EAAE,KAAK,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAC,YAAY,EAAC,IAAI,EAAC,KAAK,EAAC,SAAS,EAAC,QAAQ,IACxF,mBAAa,KAAK,EAAC,aAAa,IAAE,IAAI,CAAC,IAAI,CAAe,CAC9C,CACL,EACX;GACH;;;;;;","names":[],"sources":["src/components/app-footnote/app-footnote.css?tag=app-footnote&encapsulation=shadow","src/components/app-footnote/app-footnote.tsx"],"sourcesContent":[":host {\n  display: inline;\n  padding-left: 0.1rem;\n}\n\nion-icon {\n  vertical-align: top;\n  cursor: pointer;\n}\n","import { Component, Fragment, Prop, h } from '@stencil/core';\nimport { helpCircleOutline } from 'ionicons/icons';\n\n@Component({\n  tag: 'app-footnote',\n  styleUrl: 'app-footnote.css',\n  shadow: true,\n})\nexport class AppFootnote {\n  el: HTMLIonPopoverElement;\n  @Prop() text: string;\n  render() {\n    return (\n      <Fragment>\n        <ion-icon onClick={e => this.el.present(e)} icon={helpCircleOutline}></ion-icon>\n        <ion-popover ref={el => (this.el = el)} trigger=\"top-center\" side=\"top\" alignment=\"center\">\n          <ion-content class=\"ion-padding\">{this.text}</ion-content>\n        </ion-popover>\n      </Fragment>\n    );\n  }\n}\n"],"version":3}