{"file":"geov-entity-download-rdf.entry.esm.js","mappings":"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","names":[],"sources":["node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-download-rdf/geov-entity-download-rdf.css?tag=geov-entity-download-rdf","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity-download-rdf/geov-entity-download-rdf.js"],"sourcesContent":[":host {\n  display: block;\n}\n","import { h, Host } from \"@stencil/core\";\nimport { downloadOutline } from \"ionicons/icons\";\n/**\n * This component is a UI to fetch and download the RDF of a given Geovistory entity id.\n * It allows to choose one of the following rdf syntaxes:\n *\n * - RDF XML\n * - JSON-LD\n * - N-Triples\n * - N-Quads\n * - TRIX\n * - Thrift\n * - Turtle\n *\n */\nexport class GeovEntityDownloadRdf {\n  constructor() {\n    this.entityId = undefined;\n    this.projectId = undefined;\n    this.color = undefined;\n    this.expand = undefined;\n    this.fill = undefined;\n    this.buttonLabel = 'Download RDF';\n    this.buttonIcon = undefined;\n    this.listFormat = {\n      'RDF XML': ['application/rdf+xml', '.rdf'],\n      'JSON-LD': ['application/ld+json', '.jsonld'],\n      'N-Triples': ['application/n-triples', '.nt'],\n      'N-Quads': ['application/n-quads', '.nq'],\n      'TRIX': ['application/trix+xml', '.trix'],\n      'Thrift': ['application/rdf+thrift', '.thrift'],\n      'Turtle': ['text/turtle', '.ttl'],\n    };\n    this.response = undefined;\n  }\n  open() {\n    this.modal.present();\n  }\n  dismiss() {\n    this.modal.dismiss();\n  }\n  async fetchRDF(format) {\n    const headers = new Headers({\n      Accept: format[0], //format[0] = Type\n    });\n    let args = this.entityId;\n    if (this.projectId != undefined) {\n      args += '?p=' + this.projectId;\n    }\n    const url = 'https://www.geovistory.org/resource/';\n    const response = await fetch(url + args, {\n      method: 'GET',\n      headers: headers,\n      mode: 'cors',\n      cache: 'default',\n    });\n    this.response = await response.blob();\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(this.response);\n    a.download = this.entityId + format[1]; //format[1] = Extension file\n    a.click();\n    this.dismiss();\n  }\n  renderClickableItem() {\n    return Object.entries(this.listFormat).map(([a, b]) => (h(\"ion-item\", { button: true, detail: false, onClick: () => this.fetchRDF(b), download: \"Download\" }, this.buttonIcon ? h(\"ion-icon\", { slot: \"start\", name: this.buttonIcon }) : h(\"ion-icon\", { slot: \"start\", icon: downloadOutline }), h(\"ion-label\", null, a))));\n  }\n  render() {\n    return (h(Host, null, h(\"ion-button\", { expand: this.expand, fill: this.fill, color: this.color, onClick: () => this.open() }, this.buttonLabel, \" \", this.buttonIcon ? h(\"ion-icon\", { slot: \"end\", name: this.buttonIcon }) : h(\"ion-icon\", { slot: \"end\", icon: downloadOutline })), h(\"ion-modal\", { ref: element => (this.modal = element), onWillDismiss: () => this.dismiss(), isOpen: false }, h(\"ion-header\", null, h(\"ion-toolbar\", null, h(\"ion-buttons\", { slot: \"start\" }, h(\"ion-button\", { onClick: () => this.dismiss() }, \"Cancel\")), h(\"ion-title\", null, \"Download RDF\"))), h(\"ion-content\", { class: \"ion-padding\" }, h(\"ion-list\", { lines: \"none\" }, this.renderClickableItem()))), h(\"slot\", null)));\n  }\n  static get is() { return \"geov-entity-download-rdf\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-entity-download-rdf.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-entity-download-rdf.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"entityId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"entityId\\nID number of entity, e.g. 'i315800'\"\n        },\n        \"attribute\": \"entity-id\",\n        \"reflect\": false\n      },\n      \"projectId\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number | undefined\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"projectId\\nID number of project, e.g. '123123'\"\n        },\n        \"attribute\": \"project-id\",\n        \"reflect\": false\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never>\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"@ionic/core\",\n              \"id\": \"\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"color\\ncolor of the button\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": false\n      },\n      \"expand\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'block' | 'full'\",\n          \"resolved\": \"\\\"block\\\" | \\\"full\\\"\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"expand\\nexpand of the button\"\n        },\n        \"attribute\": \"expand\",\n        \"reflect\": false\n      },\n      \"fill\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'clear' | 'outline' | 'solid' | 'default'\",\n          \"resolved\": \"\\\"clear\\\" | \\\"default\\\" | \\\"outline\\\" | \\\"solid\\\"\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"fill\\nfill of the button\"\n        },\n        \"attribute\": \"fill\",\n        \"reflect\": false\n      },\n      \"buttonLabel\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"buttonLabel\\nLabel of the button\"\n        },\n        \"attribute\": \"button-label\",\n        \"reflect\": false,\n        \"defaultValue\": \"'Download RDF'\"\n      },\n      \"buttonIcon\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"buttonIcon\\nIcon of the button\"\n        },\n        \"attribute\": \"button-icon\",\n        \"reflect\": false\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"listFormat\": {},\n      \"response\": {}\n    };\n  }\n}\n//# sourceMappingURL=geov-entity-download-rdf.js.map\n"],"version":3}